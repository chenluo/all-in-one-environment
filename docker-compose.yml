version: "3.7"
services:
  mysqld:
    image: mysql:8.0.32
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      JVM_OPTS: "-Xms512M -Xmx512M"

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "9400:9400"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -javaagent:/jmx_exporter/jmx_prometheus_javaagent-0.17.2.jar=9400:/jmx_exporter_cfgs/kafka_broker.yml
      JVM_OPTS: "-Xms1G -Xmx1G "
    volumes:
      - ./apps/jmx_exporter:/jmx_exporter
      - ./config/jmx_exporter_cfgs:/jmx_exporter_cfgs

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    links:
      - broker:broker
    depends_on:
      - broker
    environment:
      KAFKA_BROKERCONNECT: "broker:29092"
      JVM_OPTS: "-Xms64M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    links:
      - node-exporter:node-exporter
      - mysqld-exporter:mysqld-exporter
      - broker:broker
    depends_on:
      - node-exporter
      - mysqld-exporter
      - broker
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana
    container_name: grafana
      #user: 472:0
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      GF_PATHS_CONFIG: "/etc/grafana/grafana.ini"


  mysqld-exporter:
    container_name: mysqld-exporter
    image: prom/mysqld-exporter
    ports:
      - "9104:9104"
    links:
      - mysqld:mysqld
    depends_on:
      - mysqld
    environment:
      DATA_SOURCE_NAME: "root:mysql@(mysqld:3306)/"


volumes:
  mysql-data:
  prometheus-data:
  grafana-data:
